{"version":3,"sources":["./src/app/user-profile/user-profile.component.ts","./src/app/user-profile/user-profile.component.html","./src/app/signin/signin.component.ts","./src/app/signin/signin.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/create-post/create-post.component.ts","./src/app/create-post/create-post.component.html","./src/app/resetpassword-email/resetpassword-email.component.ts","./src/app/resetpassword-email/resetpassword-email.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/app.module.ts","./src/app/resetpassword-newpassword/resetpassword-newpassword.component.ts","./src/app/resetpassword-newpassword/resetpassword-newpassword.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/search/search.component.ts","./src/app/search/search.component.html","./src/app/app-routing.module.ts","./src/app/user.service.ts","./src/app/follower-post/follower-post.component.ts","./src/app/follower-post/follower-post.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service'\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss']\n})\nexport class UserProfileComponent implements OnInit {\n\n  constructor(private profile: UserService) { }\n\n  ngOnInit(): void {\n    this.user = JSON.parse(localStorage.getItem(\"user\"));\n    this.profile.myPost().subscribe(\n      (data) => {\n        this.datas= data;\n        console.log(data)\n      })\n  }\n  \n  user = null;\n  datas = null;\n\n}\n","<div class=\"profile___header\">\n    <div>\n        <img class=\"profile___pic\" src={{user.pic}} alt=\"profile-image\">\n    </div>\n\n    <div>\n        <h1>{{user.name}}</h1>\n        <div>\n            <div><span>{{datas.mypost?.length}}</span>Posts</div>\n            <div><span>{{user.followers?.length}}</span>Followers</div>\n            <div><span>{{user.following?.length}}</span>Following</div>\n        </div>\n    </div>\n    \n</div>\n\n\n<div class=\"profile___body\">\n    <img *ngFor=\"let data of datas.mypost\" src={{data.photo}} alt={{data.title}}>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport { UserService } from '../user.service'\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss']\n})\nexport class SigninComponent implements OnInit {\n\n  data = {\n    email: '',\n    password: ''\n  };\n\n  jwt = null;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n\n  }\n\n  submit(){\n    this.userService.signinUser(this.data).subscribe((data) => {\n      this.jwt = data\n      console.log(this.jwt)\n      localStorage.setItem(\"jwt\",(this.jwt.token))\n      localStorage.setItem(\"user\",JSON.stringify(this.jwt.user))\n      if(data){\n        location.replace(\"/home\")\n      }\n    });\n  }\n\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n\n}","<form class=\"signin\">\n  <mat-card>\n    <div style=\"text-align: center;\">\n      <h1>Sign in</h1>\n    </div>\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Email</mat-label>\n      <input matInput [value]=\"data.email\" (input)=\"data.email=$event.target.value\" [formControl]=\"emailFormControl\"\n        placeholder=\"Ex. pat@example.com\">\n      <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\n        Please enter a valid email address\n      </mat-error>\n      <mat-error *ngIf=\"emailFormControl.hasError('required')\">\n        Email is <strong>required</strong>\n      </mat-error>\n    </mat-form-field>\n    <br>\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Password</mat-label>\n      <input [value]=\"data.password\" (input)=\"data.password=$event.target.value\" type=\"password\" matInput\n        placeholder=\"Simple placeholder\">\n    </mat-form-field>\n    <div style=\"text-align: right;\">\n      <a routerLink=\"/signup\">Don't have an account?</a>&nbsp;\n      <a routerLink=\"/reset\">Forgot password?</a>  \n    </div>\n    <br>\n    <div style=\"text-align: center;\">\n      <button mat-raised-button (click)=\"submit()\" color=\"primary\">Login</button>\n    </div>\n  </mat-card>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service'\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private Post: UserService) {\n    if(!this.user){\n      location.replace(\"/signup\")\n    }\n   }\n\n  ngOnInit(): void {\n    this.Post.allPost().subscribe(\n      (data) => {\n        this.datas= data;\n        console.log(data)\n      })\n  }\n\n  like(data){\n    this.Post.likePost(data).subscribe(x => {\n      this.likes = x\n      data.likes = this.likes.likes\n    })\n  }\n\n  unlike(data){\n    this.Post.unlikePost(data).subscribe(x => {\n      this.likes = x\n      data.likes = this.likes.likes\n    })\n  }\n\n  onSubmit(e,data){\n    let comment = {\n      text: e.target.value,\n      _id: data._id\n    }\n    console.log(e)\n    this.Post.commentPost(comment).subscribe(x => {\n      this.comments = x\n      data.comments = this.comments.comments\n      console.log(this.comments)\n    })\n    e.target.value = \"\"\n  }\n\n  deletePost(data){\n    this.Post.deletePost(data._id).subscribe(x => {\n      console.log(x,this.datas)\n      this.delete = x\n      this.datas.posts = this.datas.posts.filter(item => {\n        return item._id !== this.delete._id\n      })\n    })\n  }\n\n  likeCheck(data: Array<string>){\n  return data.includes(this.user._id)\n  }\n\n  deleteCheck(data){\n    if(data.postedBy._id == this.user._id){\n      return true\n    }\n    else{\n      return false\n    }\n  }\n\n  datas = null;\n  likes = null;\n  comments = null;\n  delete = null;\n  user = JSON.parse(localStorage.getItem(\"user\"))\n}\n","<div class=\"home___cardContainer\">\n  <!-- <button (click)=\"likeCheck()\">check</button> -->\n    <div *ngFor=\"let data of datas.posts\">\n      <mat-card class=\"example-card\">\n        <mat-card-header>\n          <img mat-card-avatar src=\"{{data.postedBy.pic}}\" alt=\"profile_pic\" class=\"examaple-header-image\">\n          <mat-card-title>{{data.title}}</mat-card-title>\n          <mat-card-subtitle>\n          <ng-container *ngIf=\"data.postedBy._id === user._id; else elseTemplate\">\n            <span routerLink=\"/profile\">{{data.postedBy.name}}</span>\n          </ng-container>\n          <ng-template #elseTemplate>\n            <span [routerLink]=\"[ '/profile', data.postedBy._id]\">{{data.postedBy.name}}</span>\n          </ng-template>\n        </mat-card-subtitle>\n        </mat-card-header>\n        <img mat-card-image src={{data.photo}} alt=\"Photo of a Shiba Inu\">\n        <mat-card-content>\n          <p>\n            {{data.body}}\n          </p>\n        </mat-card-content>\n        <mat-card-actions>\n          <ng-container *ngIf=\"likeCheck(data.likes); else likeTemplate\">\n            <button (click)=\"unlike(data)\" color=\"primary\" mat-raised-button>{{data.likes?.length+\" LIKES\"}}</button>\n          </ng-container>\n          <ng-template #likeTemplate>\n            <button color=\"primary\" (click)=\"like(data)\" mat-button>{{data.likes?.length+\" LIKES\"}}</button>\n          </ng-template>\n          <button *ngIf=\"deleteCheck(data)\" (click)=\"deletePost(data)\" color=\"accent\"mat-raised-button>DELETE</button>\n          <div>\n            <br>\n            <p *ngFor=\"let comment of data.comments\"><span class=\"comment___name\">{{comment.postedBy.name+'&nbsp;'}}</span>{{comment.text}}</p>\n          </div>\n          <mat-form-field id='myForm' class=\"example-full-width\">\n            <mat-label>Leave a comment</mat-label>\n            <input  (change)=\"onSubmit($event,data)\" matInput placeholder=\"Ex. It makes me feel...\">\n          </mat-form-field>\n        </mat-card-actions>\n      </mat-card>\n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'app-create-post',\n  templateUrl: './create-post.component.html',\n  styleUrls: ['./create-post.component.scss']\n})\nexport class CreatePostComponent implements OnInit {\n\n  constructor(private userService: UserService, private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  data = {\n    title: null,\n    body: null,\n    photo: null,\n    user: JSON.parse(localStorage.getItem(\"user\"))\n  };\n\n  imgurl = null;\n\n  selectImage(event){\n    if(event.target.files.length > 0){\n      const file = event.target.files[0];\n      this.data.photo = file;\n      this.upload();\n    }\n  }\n\n  upload(){\n    const formData = new FormData();\n    formData.append('file', this.data.photo);\n    formData.append('upload_preset',\"Dev-icat\");\n    formData.append('cloud_name',\"ux-unicorn\");\n    this.http.post('https://api.cloudinary.com/v1_1/ux-unicorn/image/upload',formData).subscribe(\n      data =>  {\n        this.imgurl = data;\n        console.log(this.imgurl)\n        this.data.photo = this.imgurl.url\n      })\n    // https://api.cloudinary.com/v1_1/ux-unicorn\n    // this.userService.upload(this.data).subscribe(data => console.log(data));\n  }\n\n  submit(){\n    this.userService.createPost(this.data).subscribe(data => {\n      console.log(data)\n      if(data){\n        location.replace(\"/home\")\n      }\n    })\n  }\n\n}\n","<form class=\"createPost\">\n<mat-card>\n     <mat-form-field class=\"example-full-width\">\n        <mat-label>Title</mat-label>\n        <input matInput [value]=\"data.title\" (input)=\"data.title=$event.target.value\" placeholder=\"Simple placeholder\">\n    </mat-form-field>\n    <br>\n    <mat-form-field class=\"example-full-width\">\n        <mat-label>Body</mat-label>\n        <input matInput [value]=\"data.body\" (input)=\"data.body=$event.target.value\" placeholder=\"Simple placeholder\">\n    </mat-form-field >\n    <br>\n    <div>\n        <input mat-raised-button type=\"file\" (change)=\"selectImage($event)\" id=\"myfile\" name=\"myfile\">\n    </div>\n    <br>\n    <button mat-raised-button color=\"primary\" (click)=\"submit()\">Submit post</button>\n</mat-card>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { UserService } from '../user.service'\n\n@Component({\n  selector: 'app-resetpassword-email',\n  templateUrl: './resetpassword-email.component.html',\n  styleUrls: ['./resetpassword-email.component.scss']\n})\nexport class ResetpasswordEmailComponent implements OnInit {\n\n  data = {\n    email: ''\n  };\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n\n  }\n\n  submit(){\n    this.userService.resetPassword(this.data).subscribe((data) => {\n      console.log(data)\n    });\n  }\n\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n\n}\n","<form class=\"signin\">\n    <mat-card>\n      <div style=\"text-align: center;\">\n        <h1 style=\"font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;\">DEV</h1>\n      </div>\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Email</mat-label>\n        <input matInput [value]=\"data.email\" (input)=\"data.email=$event.target.value\" [formControl]=\"emailFormControl\"\n          placeholder=\"Ex. pat@example.com\">\n        <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\n          Please enter a valid email address\n        </mat-error>\n        <mat-error *ngIf=\"emailFormControl.hasError('required')\">\n          Email is <strong>required</strong>\n        </mat-error>\n      </mat-form-field>\n      <br>\n      <div style=\"text-align: center;\">\n        <button mat-raised-button (click)=\"submit()\" color=\"primary\">Reset password</button>\n      </div>\n    </mat-card>\n  </form>\n  ","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Dev';\n  constructor(){\n\n  }\n\n}\n","<div>\r\n    <app-nav></app-nav>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service'\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private profile: UserService, private route: ActivatedRoute,\n    private router: Router) { \n      this.route.paramMap.subscribe(params => {\n        const id = params.get(\"id\")\n        this.profile.getUser(id).subscribe((data: any) => {\n          this.datas = data;\n          console.log(data,\"profile\")\n        })\n      })\n     }\n\n  ngOnInit(): void {\n    \n  }\n\n  checkFollowers(data: Array<string>){\n    let user = JSON.parse(localStorage.getItem(\"user\"))\n    if(data.includes(user._id)){\n     return true\n    }else{\n      return false\n    }\n  }\n\n  follow(followId){\n    this.profile.followUser(followId).subscribe(data => {\n      this.profileData = data\n      // console.log(this.profileData.result)\n      // console.log(this.profileData.profile)\n      this.datas.user = this.profileData.profile\n      localStorage.setItem(\"user\",JSON.stringify(this.profileData.result))\n    })\n  }\n  \n  unfollow(unfollowId){\n    this.profile.unfollowUser(unfollowId).subscribe(data => {\n      this.profileData = data\n      // console.log(this.profileData.result)\n      // console.log(this.profileData.profile)\n      this.datas.user = this.profileData.profile\n      localStorage.setItem(\"user\",JSON.stringify(this.profileData.result))\n    })\n  }\n\n  datas = null;\n  profileData = null;\n}\n","<div class=\"profile___header\">\n    <div>\n        <img  class=\"profile___pic\" src={{datas.user.pic}} alt=\"profile-image\">\n    </div>\n\n    <div>\n        <h1>{{datas.user.name}}</h1>\n        <ng-container *ngIf=\"checkFollowers(datas.user.followers); else elseTemplate\">\n            <button (click)=\"unfollow(datas.user._id)\" mat-raised-button>UNFOLLOW</button><br><br>\n        </ng-container>\n        <ng-template #elseTemplate>\n            <button color=\"primary\" (click)=\"follow(datas.user._id)\" mat-raised-button>FOLLOW</button>&nbsp;&nbsp;\n        </ng-template>\n        <div>\n            <div><span>{{datas.posts?.length}}</span>Posts</div>\n            <div><span>{{datas.user.followers?.length}}</span>Followers</div>\n            <div><span>{{datas.user.following?.length}}</span>Following</div>\n        </div>\n    </div>\n    \n</div>\n\n\n<div class=\"profile___body\">\n    <img *ngFor=\"let data of datas.posts\" src={{data.photo}} alt={{data.title}}>\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { NavComponent } from './nav/nav.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { HomeComponent } from './home/home.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { CreatePostComponent } from './create-post/create-post.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSidenavModule} from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { UserService } from './user.service'\nimport { SocialLoginModule, SocialAuthServiceConfig } from 'angularx-social-login';\nimport {\n  GoogleLoginProvider,\n  FacebookLoginProvider\n} from 'angularx-social-login';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { FollowerPostComponent } from './follower-post/follower-post.component';\nimport { ResetpasswordEmailComponent } from './resetpassword-email/resetpassword-email.component';\nimport { ResetpasswordNewpasswordComponent } from './resetpassword-newpassword/resetpassword-newpassword.component';\nimport { SearchComponent } from './search/search.component';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    ProfileComponent,\n    HomeComponent,\n    CreatePostComponent,\n    SigninComponent,\n    SignupComponent,\n    UserProfileComponent,\n    FollowerPostComponent,\n    ResetpasswordEmailComponent,\n    ResetpasswordNewpasswordComponent,\n    SearchComponent\n  ],\n  imports: [\n    BrowserModule,\n    SocialLoginModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatIconModule,\n    MatButtonModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatCardModule\n  ],\n  providers: [\n    UserService,\n    {\n      provide: 'SocialAuthServiceConfig',\n      useValue: {\n        autoLogin: false,\n        providers: [\n          {\n            id: GoogleLoginProvider.PROVIDER_ID,\n            provider: new GoogleLoginProvider(\n              '581647519293-6svkp26eklm7752s3ngqoli4vc2058ak.apps.googleusercontent.com'\n            ),\n          },\n          {\n            id: FacebookLoginProvider.PROVIDER_ID,\n            provider: new FacebookLoginProvider('clientId'),\n          },\n        ],\n      } as SocialAuthServiceConfig,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { UserService } from '../user.service'\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-resetpassword-newpassword',\n  templateUrl: './resetpassword-newpassword.component.html',\n  styleUrls: ['./resetpassword-newpassword.component.scss']\n})\nexport class ResetpasswordNewpasswordComponent implements OnInit {\n\n  data = {\n    password: '',\n    token: ''\n  };\n\n  constructor(private userService: UserService, private route: ActivatedRoute,\n    private router: Router) { \n      this.route.paramMap.subscribe((data:any) => {\n          console.log(data.params.id,\"token\")\n          this.data.token = data.params.id;\n      })\n    }\n\n  ngOnInit(): void {\n\n  }\n\n  submit(){\n    this.userService.updatePassword(this.data).subscribe((data) => {\n      console.log(data)\n    });\n  }\n}\n","<form class=\"signin\">\n    <mat-card>\n      <div style=\"text-align: center;\">\n        <h1 style=\"font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;\">DEV</h1>\n      </div>\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>New Password</mat-label>\n        <input [value]=\"data.password\" (input)=\"data.password=$event.target.value\" type=\"password\" matInput\n          placeholder=\"Password\">\n      </mat-form-field>\n      <br>\n      <div style=\"text-align: center;\">\n        <button mat-raised-button (click)=\"submit()\" color=\"primary\">Update password</button>\n      </div>\n    </mat-card>\n  </form>\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  signOut(){\n    localStorage.clear();\n    location.replace(\"/signin\")\n  }\n\n  userCheck(){\n    if(!localStorage.getItem(\"user\")){\n      location.replace(\"/signin\");\n      alert(\"You have to create an account first\")\n    }\n  }\n\n  register(){\n    if(localStorage.getItem(\"user\")){\n      return false\n    }else{\n      return true\n    }\n  }\n}\n","<div style=\"height: 90vh;\">\n    <mat-toolbar color=\"primary\">\n      <mat-toolbar-row>\n        <button mat-icon-button (click)=\"sidenav.toggle()\" fxShow=\"true\" fxHide.gt-sm>\n          <mat-icon>menu</mat-icon>\n        </button>\n        <span style=\"font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;\">SMEDIA</span>\n        <span class=\"menu-spacer\"></span>\n        <div fxShow=\"true\" fxHide.lt-md>\n            <ng-container *ngIf=\"register()\">\n                <button routerLink=\"/signin\" mat-button class=\"example-icon favorite-icon\">\n                    Signin\n                </button>\n                <button routerLink=\"/signup\" mat-button class=\"example-icon\">\n                    Signup\n                </button>\n            </ng-container>\n                <button routerLink=\"/search\" (click)=\"userCheck()\" mat-button class=\"example-icon\">\n                    Search\n                </button>\n                <button routerLink=\"/home\" (click)=\"userCheck()\" mat-button class=\"example-icon\">\n                    Home\n                </button>\n                <button routerLink=\"/followerPost\" (click)=\"userCheck()\" mat-button class=\"example-icon\">\n                    Follower Post\n                </button>\n                <button routerLink=\"/profile\" (click)=\"userCheck()\" mat-button class=\"example-icon\">\n                    Profile\n                </button>\n                <button routerLink=\"/createPost\" (click)=\"userCheck()\" mat-button class=\"example-icon\">\n                    Create post\n                </button>\n                <button mat-button class=\"example-icon\" (click)=\"signOut()\">\n                    Signout\n                </button>\n            </div>\n        </mat-toolbar-row>\n      </mat-toolbar>\n    \n      <mat-sidenav-container fxFlexFill>\n        <mat-sidenav #sidenav>\n          <mat-nav-list>\n            <ng-container *ngIf=\"register()\">\n                <a routerLink=\"/signin\" mat-list-item class=\"example-icon favorite-icon\">\n                    Signin\n                </a>\n                <a routerLink=\"/signup\" mat-list-item class=\"example-icon\">\n                    Signup\n                </a>\n            </ng-container>\n                <a routerLink=\"/search\" (click)=\"userCheck()\" mat-list-item class=\"example-icon\">\n                    Search\n                </a>\n                <a routerLink=\"/home\" (click)=\"userCheck()\" mat-list-item class=\"example-icon\">\n                    Home\n                </a>\n                <a routerLink=\"/followerPost\" (click)=\"userCheck()\" mat-list-item class=\"example-icon\">\n                    Follower Post\n                </a>\n                <a routerLink=\"/profile\" (click)=\"userCheck()\" mat-list-item class=\"example-icon\">\n                    Profile\n                </a>\n                <a routerLink=\"/createPost\" (click)=\"userCheck()\" mat-list-item class=\"example-icon\">\n                    Create post\n                </a>\n                <a mat-list-item class=\"example-icon\" (click)=\"userCheck()\" (click)=\"signOut()\">\n                    Signout\n                </a>\n            </mat-nav-list>\n        </mat-sidenav>\n        <mat-sidenav-content fxFlexFill>\n            <br>\n            <router-outlet></router-outlet>\n        </mat-sidenav-content>\n      </mat-sidenav-container>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport { UserService } from '../user.service'\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { FacebookLoginProvider, GoogleLoginProvider } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  data = {\n    name: '',\n    email: '',\n    password: '',\n    pic: '',\n  };\n\n  // user: SocialUser;\n  // loggedIn: boolean;\n\n  constructor(private userService: UserService, private authService: SocialAuthService,private http: HttpClient) { \n    \n  }\n\n  ngOnInit(): void {\n    // this.authService.authState.subscribe((user) => {\n    //   this.user = user;\n    //   this.loggedIn = (user != null);\n    // })\n  }\n\n  // signInWithGoogle(): void {\n  //   this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n  // }\n \n  // signInWithFB(): void {\n  //   this.authService.signIn(FacebookLoginProvider.PROVIDER_ID);\n  // }\n \n  // signOut(): void {\n  //   this.authService.signOut();\n  // }\n\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n\n  submit(){\n    this.userService.signupUser(this.data).subscribe(data => {\n      if(data){\n        location.replace(\"/signin\")\n      }\n    });\n  }\n\n  selectImage(event){\n    console.log(event)\n    if(event.target.files.length > 0){\n      const file = event.target.files[0];\n      this.data.pic = file;\n      this.upload()\n    }\n  }\n\n  imgurl = null;\n\n  upload(){\n    const formData = new FormData();\n    formData.append('file', this.data.pic);\n    formData.append('upload_preset',\"Dev-icat\");\n    formData.append('cloud_name',\"ux-unicorn\");\n    this.http.post('https://api.cloudinary.com/v1_1/ux-unicorn/image/upload',formData).subscribe(\n      data =>  {\n        this.imgurl = data;\n        console.log(this.imgurl)\n        this.data.pic = this.imgurl.url\n      })\n    // https://api.cloudinary.com/v1_1/ux-unicorn\n    // this.userService.upload(this.data).subscribe(data => console.log(data));\n  }\n\n  // send(){\n  //   this.userService.GUser(this.user).subscribe(data => console.log(data))\n  // }\n}\n","<form class=\"signup\">\n  <mat-card>\n    <div style=\"text-align: center;\">\n      <h1>Sign up</h1>\n    </div>\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Name</mat-label>\n      <input matInput [value]=\"data.name\" (input)=\"data.name=$event.target.value\" placeholder=\"Simple placeholder\">\n    </mat-form-field>\n    <br>\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Email</mat-label>\n      <input matInput [value]=\"data.email\" (input)=\"data.email=$event.target.value\" [formControl]=\"emailFormControl\"\n        placeholder=\"Ex. pat@example.com\">\n      <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\n        Please enter a valid email address\n      </mat-error>\n      <mat-error *ngIf=\"emailFormControl.hasError('required')\">\n        Email is <strong>required</strong>\n      </mat-error>\n    </mat-form-field>\n    <br>\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Password</mat-label>\n      <input [value]=\"data.password\" (input)=\"data.password=$event.target.value\" type=\"password\" matInput\n        placeholder=\"Simple placeholder\">\n    </mat-form-field>\n    <br>\n    <div class=\"example-full-width\">\n      <label for=\"#myfile\">Profile pic </label>\n        <input type=\"file\" (change)=\"selectImage($event)\" id=\"myfile\" name=\"myfile\">\n    </div>\n    <br>\n    <div style=\"text-align: right;\">\n      <a href=\"/signin\">Already have an account?</a>\n    </div>\n    <br>\n    <div style=\"text-align: center;\">\n      <button (click)=\"submit()\" mat-raised-button color=\"primary\">Signup</button>\n    </div>\n  </mat-card>\n</form>\n<br>\n<div style=\"text-align: center;\">\n  <!-- <div>\n    <button type=\"button\" mat-raised-button color=\"accent\" (click)=\"signInWithFB()\">Sign In With Facebook</button>&nbsp;\n    <button type=\"button\" mat-raised-button color=\"accent\" (click)=\"signInWithGoogle()\">Sign In With Google</button>&nbsp;\n    <button type=\"button\" mat-raised-button color=\"accent\" (click)=\"send()\">Send Guser data</button>\n  </div> -->\n  <!-- <div *ngIf=\"user\">\n    <img src=\"{{ user.photoUrl }}\">\n    <h4>{{user.name}}</h4>\n    <p>{{user.email}}</p>\n  </div> -->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n  }\n\n  data = {\n    query: '',\n  };\n\n  \n  submit(){\n    this.userService.searchUser(this.data).subscribe((data:any) => {\n      console.log(data.user)\n      this.searchData = data.user\n    });\n  };\n\n  searchData = null;\n\n}\n","<div>\n    <form class=\"signup\">\n        <mat-card>\n          <mat-form-field class=\"example-full-width\">\n            <mat-label>User name</mat-label>\n            <input matInput [value]=\"data.query\" (input)=\"data.query=$event.target.value\" placeholder=\"Type here\">\n          </mat-form-field>\n          <br>\n          <button (click)=\"submit()\" mat-raised-button color=\"primary\">Search</button>\n        </mat-card>\n    </form>\n</div>\n<div *ngIf=\"searchData\" style=\"width: 80%;margin: auto;\">\n  <mat-list role=\"list\">\n    <mat-list-item *ngFor=\"let item of searchData\" role=\"listitem\"><a [routerLink]=\"[ '/profile', item._id ]\">{{item.email}}</a></mat-list-item>\n  </mat-list>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CreatePostComponent } from './create-post/create-post.component';\nimport { FollowerPostComponent } from './follower-post/follower-post.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport {ResetpasswordNewpasswordComponent} from './resetpassword-newpassword/resetpassword-newpassword.component'\nimport {ResetpasswordEmailComponent} from './resetpassword-email/resetpassword-email.component'\nimport { SearchComponent } from './search/search.component';\n\nconst routes: Routes = [\n  { path: 'signup', component: SignupComponent },\n  { path: 'signin', component: SigninComponent },\n  { path: 'search', component: SearchComponent },\n  { path: 'home', component: HomeComponent },\n  { path: 'followerPost', component: FollowerPostComponent },\n  { path: 'createPost', component: CreatePostComponent },\n  { path: 'profile',  component: UserProfileComponent },\n  { path: 'profile/:id', component: ProfileComponent },\n  { path: 'reset',  component: ResetpasswordEmailComponent },\n  { path: 'reset/:id', component: ResetpasswordNewpasswordComponent },\n  { path: '',   redirectTo: '/home', pathMatch: 'full' },\n  // { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n  \n }\n","import { Injectable } from '@angular/core';\nimport {HttpClient,HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  constructor(private http: HttpClient) {\n\n  }\n\n  signupUser(data: {\n    name: string;\n    email: string;\n    password: string;\n    pic: string;\n  }){\n   return this.http.post(\"signup\",data)\n  }\n\n  signinUser(data: {\n    email: string;\n    password: string\n  }){\n   return this.http.post(\"signin\",data)\n  }\n\n  \n  GUser(data: {\n    email: string;\n    name: string;\n    photoUrl: string;\n    id: string;\n  }){\n   return this.http.post(\"guser\",data)\n  }\n\n  createPost(data: {\n    title: string;\n    body: string;\n    photo: string;\n    user: any;\n  }){\n    console.log(this.headers)\n    return this.http.post(\"createpost\",data,{headers: this.headers})\n  }\n\n  searchUser(data: {\n      query: string;\n  }){\n    console.log(this.headers)\n    return this.http.post(\"search-users\",data)\n  }\n\n  resetPassword(data: {\n    email: string;\n  }){\n    return this.http.post(\"reset-password\",data)\n  }\n  updatePassword(data: {\n    password: string;\n    token: string;\n  }){\n    return this.http.post(\"new-password\",data)\n  }\n\n  likePost(data: {\n    _id: string;\n  }){\n    return this.http.put(\"like\",data,{headers: this.headers})\n  }\n  \n  unlikePost(data: {\n    _id: string;\n  }){\n    return this.http.put(\"unlike\",data,{headers: this.headers})\n  }\n\n  commentPost(data: {\n    _id: string;\n    text: any;\n  }){\n    return this.http.put(\"comment\",data,{headers: this.headers})\n  }\n\n  headers = new HttpHeaders({\n    Authorization: 'Bearer '+localStorage.getItem(\"jwt\")\n});\n\n  allPost(){\n    return this.http.get(\"allpost\")\n  }\n  \n  getsubpost(){\n    return this.http.get(\"getsubpost\",{headers: this.headers})\n  }\n\n  myPost(){\n    return this.http.get(\"mypost\",{headers: this.headers})\n  }\n\n  \n  deletePost(postid){\n    return this.http.delete(`deletepost/${postid}`,{headers: this.headers})\n  }\n\n  getUser(id){\n    return this.http.get(`user/${id}`,{headers: this.headers})\n  }\n  \n  followUser(followId){\n    return this.http.put('follow',{followId},{headers: this.headers})\n  }\n  \n  unfollowUser(unfollowId){\n    return this.http.put('unfollow',{unfollowId},{headers: this.headers})\n  }\n}\n\n// import { Injectable } from '@angular/core';\n// import {HttpClient,HttpHeaders} from '@angular/common/http';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class UserService {\n//   constructor(private http: HttpClient) {\n\n//   }\n\n//   signupUser(data: {\n//     name: string;\n//     email: string;\n//     password: string;\n//     pic: string;\n//   }){\n//    return this.http.post(\"http://localhost:3000/signup\",data)\n//   }\n\n//   signinUser(data: {\n//     email: string;\n//     password: string\n//   }){\n//    return this.http.post(\"http://localhost:3000/signin\",data)\n//   }\n\n  \n//   GUser(data: {\n//     email: string;\n//     name: string;\n//     photoUrl: string;\n//     id: string;\n//   }){\n//    return this.http.post(\"http://localhost:3000/guser\",data)\n//   }\n\n//   createPost(data: {\n//     title: string;\n//     body: string;\n//     photo: string;\n//     user: any;\n//   }){\n//     console.log(this.headers)\n//     return this.http.post(\"http://localhost:3000/createpost\",data,{headers: this.headers})\n//   }\n\n//   searchUser(data: {\n//       query: string;\n//   }){\n//     console.log(this.headers)\n//     return this.http.post(\"http://localhost:3000/search-users\",data)\n//   }\n\n//   resetPassword(data: {\n//     email: string;\n//   }){\n//     return this.http.post(\"http://localhost:3000/reset-password\",data)\n//   }\n//   updatePassword(data: {\n//     password: string;\n//     token: string;\n//   }){\n//     return this.http.post(\"http://localhost:3000/new-password\",data)\n//   }\n\n//   likePost(data: {\n//     _id: string;\n//   }){\n//     return this.http.put(\"http://localhost:3000/like\",data,{headers: this.headers})\n//   }\n  \n//   unlikePost(data: {\n//     _id: string;\n//   }){\n//     return this.http.put(\"http://localhost:3000/unlike\",data,{headers: this.headers})\n//   }\n\n//   commentPost(data: {\n//     _id: string;\n//     text: any;\n//   }){\n//     return this.http.put(\"http://localhost:3000/comment\",data,{headers: this.headers})\n//   }\n\n//   headers = new HttpHeaders({\n//     Authorization: 'Bearer '+localStorage.getItem(\"jwt\")\n// });\n\n//   allPost(){\n//     return this.http.get(\"http://localhost:3000/allpost\")\n//   }\n  \n//   getsubpost(){\n//     return this.http.get(\"http://localhost:3000/getsubpost\",{headers: this.headers})\n//   }\n\n//   myPost(){\n//     return this.http.get(\"http://localhost:3000/mypost\",{headers: this.headers})\n//   }\n\n  \n//   deletePost(postid){\n//     return this.http.delete(`http://localhost:3000/deletepost/${postid}`,{headers: this.headers})\n//   }\n\n//   getUser(id){\n//     return this.http.get(`http://localhost:3000/user/${id}`,{headers: this.headers})\n//   }\n  \n//   followUser(followId){\n//     return this.http.put('http://localhost:3000/follow',{followId},{headers: this.headers})\n//   }\n  \n//   unfollowUser(unfollowId){\n//     return this.http.put('http://localhost:3000/unfollow',{unfollowId},{headers: this.headers})\n//   }\n// }\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service'\n\n@Component({\n  selector: 'app-follower-post',\n  templateUrl: './follower-post.component.html',\n  styleUrls: ['./follower-post.component.scss']\n})\nexport class FollowerPostComponent implements OnInit {\n\n  constructor(private Post: UserService) { }\n\n  ngOnInit(): void {\n    this.Post.getsubpost().subscribe(\n      (data) => {\n        this.datas= data;\n        console.log(data)\n      })\n  }\n\n  like(data){\n    this.Post.likePost(data).subscribe(x => {\n      this.likes = x\n      data.likes = this.likes.likes\n    })\n  }\n\n  unlike(data){\n    this.Post.unlikePost(data).subscribe(x => {\n      this.likes = x\n      data.likes = this.likes.likes\n    })\n  }\n\n  onSubmit(e,data){\n    let comment = {\n      text: e.target.value,\n      _id: data._id\n    }\n    console.log(e)\n    this.Post.commentPost(comment).subscribe(x => {\n      this.comments = x\n      data.comments = this.comments.comments\n      console.log(this.comments)\n    })\n    e.target.value = \"\"\n  }\n\n  deletePost(data){\n    this.Post.deletePost(data._id).subscribe(x => {\n      console.log(x,this.datas)\n      this.delete = x\n      this.datas.posts = this.datas.posts.filter(item => {\n        return item._id !== this.delete._id\n      })\n      console.log(this.datas)\n    })\n  }\n\n  datas = null;\n  likes = null;\n  comments = null;\n  delete = null;\n  user = JSON.parse(localStorage.getItem(\"user\"))\n\n}\n","<div class=\"home___cardContainer\">\n    <div *ngFor=\"let data of datas.posts\">\n      <mat-card class=\"example-card\">\n        <mat-card-header>\n          <div mat-card-avatar class=\"examaple-header-image\"></div>\n          <mat-card-title>{{data.title}}</mat-card-title>\n          <mat-card-subtitle>\n          <ng-container *ngIf=\"data.postedBy._id === user._id; else elseTemplate\">\n            <span routerLink=\"/profile\">{{data.postedBy.name}}</span>\n          </ng-container>\n          <ng-template #elseTemplate>\n            <span [routerLink]=\"[ '/profile', data.postedBy._id]\">{{data.postedBy.name}}</span>\n          </ng-template>\n        </mat-card-subtitle>\n        </mat-card-header>\n        <img mat-card-image src={{data.photo}} alt=\"Photo of a Shiba Inu\">\n        <mat-card-content>\n          <p>\n            {{data.body}}\n          </p>\n        </mat-card-content>\n        <mat-card-actions>\n          <button color=\"primary\" (click)=\"like(data)\" mat-raised-button>{{data.likes?.length+\" LIKES\"}}</button>\n          <button (click)=\"unlike(data)\" mat-button>DISLIKE</button>\n          <button (click)=\"deletePost(data)\" color=\"accent\"mat-raised-button>DELETE</button>\n          <div>\n            <br>\n            <p *ngFor=\"let comment of data.comments\"><span class=\"comment___name\">{{comment.postedBy.name+'&nbsp;'}}</span>{{comment.text}}</p>\n          </div>\n          <mat-form-field id='myForm' class=\"example-full-width\">\n            <mat-label>Leave a comment</mat-label>\n            <input  (change)=\"onSubmit($event,data)\" matInput placeholder=\"Ex. It makes me feel...\">\n          </mat-form-field>\n        </mat-card-actions>\n      </mat-card>\n    </div>\n    <!-- <button (click)=\"like()\" mat-button>name</button> -->\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}